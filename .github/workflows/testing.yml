name: Unit Tests and Tutorial Scripts

on: [push]

jobs:
  setup:
    runs-on: ubuntu-22.04   # Pin the runner to avoid sudden breakage
    outputs:
      python-version: ${{ steps.setup-python.outputs.python-version }}
    steps:
      - uses: actions/checkout@v4

      # Need to install poetry before setting up
      # Python to ensure the cache works correctly
      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.11"
          cache: 'poetry'

      # Now install the needed version of Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root --without dev,ui,docs
          poetry install --no-interaction --only-root

  tests:
    runs-on: ubuntu-22.04
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ needs.setup.outputs.python-version }}
          cache: 'poetry'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-in-project: true

      - name: Run unit tests
        run: poetry run pytest -n auto -m "not requires_api_key"

      - name: Run API tests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: poetry run pytest --run-api-tests -m "requires_api_key"
        env:
          QORO_API_KEY: ${{ secrets.QORO_API_KEY }}

  tutorials:
    runs-on: ubuntu-22.04
    needs: [setup, tests]
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ needs.setup.outputs.python-version }}
          cache: 'poetry'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-in-project: true

      - name: Run tutorial scripts
        run: ./.github/workflows/run_tutorials.sh
